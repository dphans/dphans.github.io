{"name":"Implementing TURN server on CentOS","tagline":"","body":"**TURN is an extension of STUN, so TURN server has also STUN features. When we use both STUN and TURN servers, STUN is always attempted first to speedup the connection out of getting immediate candidates when users are sitting behind same NAT. And TURN is used as fallback option depending on client locations and network topologies.**\r\n\r\n### First: Install Prerequisite for CentOS\r\n\r\n``` sh\r\nyum install -y make gcc cc gcc-c++ wget\r\nyum install -y openssl-devel libevent libevent-devel mysql-devel mysql-server\r\n```\r\n\r\n### Second: Install LibEvent modules\r\n\r\nAs root, build and install the library with the usual:\r\n\r\n``` sh\r\nwget https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz\r\ntar xvfz libevent-2.0.21-stable.tar.gz\r\ncd libevent-2.0.21-stable && ./configure\r\nmake && make install && cd ..\r\n```\r\n\r\n\r\n### Third: Download & Install TURN modules\r\n\r\n``` sh\r\nwget http://turnserver.open-sys.org/downloads/v3.2.4.1/turnserver-3.2.4.1.tar.gz\r\ntar -xvzf turnserver-3.2.4.1.tar.gz\r\ncd turnserver-3.2.4.1\r\nmake && make install\r\n```\r\n\r\n\r\n### Fourth: Configure “turnserver.conf” file\r\n\r\n``` sh\r\ncd /etc\r\nmkdir turnserver && cd turnserver\r\nvi turnserver.conf\r\n```\r\nPaste into your editor there lines below:\r\n\r\n``` sh\r\nuser=username:password\r\nlistening-port=2222\r\nlistening-ip=127.1.1\r\n```\r\nPress Esc and :wq to save config file.\r\n\r\n\r\n\r\n### Sixth Step: “Permanently” run TURN server instance\r\n\r\n``` sh\r\ncd /etc/turnserver/\r\nnohup turnserver -v -r ip:port -a -b turnuserdb.conf -c turnserver.conf -u turn-username -r ip:port -p turn-password &\r\n# Replace “ip:port” with yours! E.g. 127.1.1:2222, “turn-username” with custom-username, and “turn-password” with custom-password.\r\n```\r\n\r\n#### Example:\r\n\r\n``` sh\r\nnohup turnserver -v -r 127.1.1:2222 -a -b turnuserdb.conf -c turnserver.conf -u baophan -r 127.1.1:2222 -p blablabla &\r\n```\r\n\r\n**Explain: You can run TURN server “forever”, need placed turnserver command between “nohup” and “&”, like this:**\r\n\r\n``` sh\r\nnohup TURN-execution-command &\r\n```\r\n\r\n**In javascript (Embedding a visible password in your Javascript code may allow someone else to use your TURN server):**\r\n\r\n``` javascript\r\nvar pc_config = {\"iceServers\": [{\"url\": \"stun:stun.l.google.com:19302\"},{\"url\":\"turn:my_username@<turn_server_ip_address>\", \"credential\":\"my_password\"}]};\r\n```\r\n\r\n**Example on Android:**\r\n\r\n``` java\r\niceServers.add(new PeerConnection.IceServer(\"turn:turn_server_ip_address\", \"myusername\", \"my password\"));\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}